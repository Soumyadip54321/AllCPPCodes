#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <algorithm>
#include <vector>
using namespace std;

int isDivisible(string s);
const int M=1e9+7;

int main(){
    string s="111100011101111111100111111101110100111110111110011101111111111111101110101111110111110110111111001110111111110110111111011110111111011011110110110001111111011101110111111110101111111111111101101111111111111111011010111111110101111101110011001101111111111111111111100111111111101011001111110111111101111111101111111111101111100101011111111100110111111011110111111111111101011110111101110100111111010111111111111111111101111111111111101111011101110010110011011011110110111111010111110010111011111111111111111111110101111111011110111101011111110111101110111111011111111111100110111101111101111111101100110101111101111101111110110110111111111101111111111111011101011111111111111001001011111110011111111111111111111111111011111111101111001111101100111111101111111110111100111111011001101111111111111111110111010010111011111110100111000011110001";
    cout<<isDivisible(s);
    return 0;
}
int isDivisible(string s){
    /*
    idea:
    1. we check if diff between number of non-zero odd bits and non-zero even bits is divisible by 3
    */
   long long oddbitsct=0,evenbitsct=0;

    for(int i=s.length()-1;i>=0;i--){
        if(i%2==0 && s[i]=='1')
            evenbitsct++;
        
        if(i%2!=0 && s[i]=='1')
            oddbitsct++;
    }

    if((abs(evenbitsct-oddbitsct))%3==0)
        return 1;
    return 0;
}